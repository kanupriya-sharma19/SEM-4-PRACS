
GRAPH COLORING

#include <stdio.h>

#define MAX 50

int x[MAX];
int g[4][4] = {
    {0, 1, 0, 1},
    {1, 0, 1, 0},
    {0, 1, 0, 1},
    {1, 0, 1, 0}
};

int n = 4;         
int m;             
int c = 0;         
int count = 0;     

void nextValue(int k) {
    int j;
    while (1) {
        x[k] = (x[k] + 1) % (m + 1); 
        if (x[k] == 0)
            return; 

        for (j = 0; j < n; j++) {
            if (g[k][j] == 1 && x[k] == x[j])
                break; 
        }

        if (j == n)
            return; 
    }
}

void GraphColoring(int k) {
    while (1) {
        nextValue(k);
        if (x[k] == 0)
            return;

        if (k == n - 1) {
            c = 1;
            for (int i = 0; i < n; i++)
                printf("%d ", x[i]);
            count++;
            printf("\n");
        } else {
            GraphColoring(k + 1);
        }
    }
}

int main() {
    printf("Possible Solutions are:\n");

    for (m = 1; m <= n; m++) {
        c = 0;
        count = 0;
        for (int i = 0; i < MAX; i++) x[i] = 0;

        GraphColoring(0);

        if (c == 1) {
            printf("\nThe chromatic number is %d", m);
            printf("\nThe total number of solutions is %d\n", count);
            break;
        }
    }
if(c==0){
    printf("No solution");
}
    return 0;
}


